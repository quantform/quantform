/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    FeedImportCommand,
    FeedImportCommandFromJSON,
    FeedImportCommandToJSON,
} from '../models';

export interface FeedControllerImportRequest {
    name: string;
    feedImportCommand?: FeedImportCommand;
}

/**
 * 
 */
export class FeedApi extends runtime.BaseAPI {

    /**
     * Import
     */
    async feedControllerImportRaw(requestParameters: FeedControllerImportRequest): Promise<runtime.ApiResponse<FeedImportCommand>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling feedControllerImport.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/feed/{name}/import`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: FeedImportCommandToJSON(requestParameters.feedImportCommand),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => FeedImportCommandFromJSON(jsonValue));
    }

    /**
     * Import
     */
    async feedControllerImport(requestParameters: FeedControllerImportRequest): Promise<FeedImportCommand> {
        const response = await this.feedControllerImportRaw(requestParameters);
        return await response.value();
    }

}
