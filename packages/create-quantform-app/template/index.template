import { binance } from '@quantform/binance';
import {
  d,
  deposit,
  describe,
  instrumentOf,
  ohlc,
  period,
  rule,
  Timeframe
} from '@quantform/core';
import { sma } from '@quantform/stl';
import { combineLatest, filter, map, share, take, tap } from 'rxjs';

describe('golden-cross', () => {
  const instrument = instrumentOf('binance:eth-usdt');

  rule('buy 0.1 ETH on Binance when SMA(50) crossover SMA(200) on D1 candle', session => {
    const candle$ = session.trade(instrument).pipe(
      ohlc(Timeframe.H1, it => it.rate),
      share()
    );

    return combineLatest([
      candle$.pipe(sma(50, it => it.close)),
      candle$.pipe(sma(200, it => it.close))
    ]).pipe(
      filter(([[, short], [, long]]) => short.greaterThan(long)),
      take(1),
      map(() => session.open({ instrument, quantity: d(0.1) }))
    );
  });

  return [binance(), deposit(instrument.quote, d(1000)), period(new Date('2022-06-01'))];
});